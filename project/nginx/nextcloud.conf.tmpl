# Переменная SERVER_NAME приходит из docker-compose.
# Пример: SERVER_NAME="documents.deilmann.sk localhost 127.0.0.1 nextcloud"

client_max_body_size 0;
proxy_buffering off;
proxy_request_buffering off;
proxy_http_version 1.1;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# -------------------------
# :80 — только ACME и редирект на HTTPS
# -------------------------
server {
    listen 80;
    listen [::]:80;
    server_name ${SERVER_NAME};

    # ACME http-01 (certbot)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }

    # Проброс well-known для nextcloud до установки сертификата
    location = /.well-known/carddav   { return 301 /remote.php/dav; }
    location = /.well-known/caldav    { return 301 /remote.php/dav; }
    location = /.well-known/webfinger { return 301 /index.php/.well-known/webfinger; }
    location = /.well-known/nodeinfo  { return 301 /index.php/.well-known/nodeinfo; }

    # Всё остальное — 301 на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# -------------------------
# :443 — основной сервер
# -------------------------
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${SERVER_NAME};

    # ВАЖНО: если SERVER_NAME содержит несколько имён, путь ниже должен указывать
    # на КОНКРЕТНЫЙ каталог домена, под которым выпускался сертификат (обычно первый).
    ssl_certificate     /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;

    # Well-known редиректы Nextcloud
    location = /.well-known/carddav   { return 301 /remote.php/dav; }
    location = /.well-known/caldav    { return 301 /remote.php/dav; }
    location = /.well-known/webfinger { return 301 /index.php/.well-known/webfinger; }
    location = /.well-known/nodeinfo  { return 301 /index.php/.well-known/nodeinfo; }

    # WebDAV / CalDAV / CardDAV
    location ~ ^/remote\.php/(webdav|dav|dav/|caldav|carddav) {
        proxy_set_header Host              $http_host;
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

        proxy_set_header Destination       $http_destination;
        proxy_set_header Overwrite         $http_overwrite;
        proxy_set_header Depth             $http_depth;
        proxy_set_header Range             $http_range;
        proxy_set_header If-Range          $http_if_range;
        proxy_set_header If-None-Match     $http_if_none_match;
        proxy_set_header If-Match          $http_if_match;

        proxy_connect_timeout 60s;
        proxy_send_timeout    600s;
        proxy_read_timeout    600s;

        chunked_transfer_encoding on;

        proxy_pass http://nextcloud:80;
    }

    # Всё остальное — на Nextcloud
    location / {
        proxy_set_header Host               $http_host;   # сохраняем :порт
        proxy_set_header X-Forwarded-Host   $http_host;
        proxy_set_header X-Forwarded-Ssl     on;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

        proxy_connect_timeout 60s;
        proxy_send_timeout    600s;
        proxy_read_timeout    600s;

        proxy_pass http://nextcloud:80;
    }

    # Ранняя защита «лишних» путей
    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)         { return 404; }

    # === ИСПРАВЛЕНИЕ: статика тоже проксируется в Nextcloud ===
    location ~* \.(?:css|js|woff2?|svg|gif|ico|png|jpe?g)$ {
        expires 7d;
        access_log off;

        proxy_set_header Host               $http_host;
        proxy_set_header X-Forwarded-Host   $http_host;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

        proxy_connect_timeout 60s;
        proxy_send_timeout    600s;
        proxy_read_timeout    600s;

        proxy_pass http://nextcloud:80;
    }
}
