# Переменная SERVER_NAME приходит из docker-compose (можно список через пробел).
# Пример: SERVER_NAME="documents.deilmann.sk localhost 127.0.0.1 nextcloud"

client_max_body_size 0;
proxy_buffering off;
proxy_request_buffering off;
proxy_http_version 1.1;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
    listen 80;
    listen [::]:80;
    server_name ${SERVER_NAME};

    # ACME
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }

    # Well-known редиректы Nextcloud
    location = /.well-known/carddav  { return 301 /remote.php/dav; }
    location = /.well-known/caldav   { return 301 /remote.php/dav; }
    location = /.well-known/webfinger { return 301 /index.php/.well-known/webfinger; }
    location = /.well-known/nodeinfo  { return 301 /index.php/.well-known/nodeinfo; }

    # ВАЖНО: отдельный блок для WebDAV — не буферизуем и пробрасываем специфические заголовки
    location ~ ^/remote\.php/(webdav|dav|dav/|caldav|carddav) {
        proxy_set_header Host              $http_host;     # сохраняем порт в редиректах
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

        # DAV-специфика (иначе у некоторых клиентов бывают 405/409)
        proxy_set_header Destination       $http_destination;
        proxy_set_header Overwrite         $http_overwrite;
        proxy_set_header Depth             $http_depth;
        proxy_set_header Range             $http_range;
        proxy_set_header If-Range          $http_if_range;
        proxy_set_header If-None-Match     $http_if_none_match;
        proxy_set_header If-Match          $http_if_match;

        # таймауты под большие аплоады
        proxy_connect_timeout 60s;
        proxy_send_timeout    600s;
        proxy_read_timeout    600s;

        # для chunked uploads
        chunked_transfer_encoding on;

        proxy_pass http://nextcloud:80;
    }

    # Остальной трафик
    location / {
        proxy_set_header Host              $http_host;     # сохраняем :8080 при локальном доступе
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

        proxy_connect_timeout 60s;
        proxy_send_timeout    600s;
        proxy_read_timeout    600s;

        proxy_pass http://nextcloud:80;
    }

    # Ранняя защита «лишних» путей
    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)         { return 404; }

    # Немного кэша для статики (если вдруг отдастся фронтом)
    location ~* \.(?:css|js|woff2?|svg|gif|ico|png|jpe?g)$ {
        expires 7d;
        access_log off;
    }
}
