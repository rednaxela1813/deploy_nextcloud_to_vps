name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start SSH agent with our key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Trust VPS host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Install rsync
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync

      # Синхроним ТОЛЬКО папку project/ -> DEPLOY_PATH
      - name: Sync project/ to server via rsync
        run: |
          rsync -az --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.env' \
            --exclude='README.md' \
            -e "ssh -p ${{ secrets.SSH_PORT }}" \
            ./project/  ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/

      - name: Build & (re)start services on VPS
        run: |
          ssh -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "
            set -euo pipefail
            cd '${{ secrets.DEPLOY_PATH }}' || { echo 'DEPLOY_PATH not found'; exit 1; }
            echo 'PWD:'; pwd
            echo 'Listing:'; ls -la

            # Определяем compose-файл
            if [ -f docker-compose.yml ]; then
              COMPOSE_FILE='docker-compose.yml'
            elif [ -f compose.yml ]; then
              COMPOSE_FILE='compose.yml'
            else
              echo 'No compose file (docker-compose.yml/compose.yml) found in $PWD'; exit 1
            fi

            docker compose -f \"$COMPOSE_FILE\" pull || true
            docker compose -f \"$COMPOSE_FILE\" up -d --build
            docker system prune -f || true
          "
