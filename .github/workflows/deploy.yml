name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start SSH agent with our key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Trust VPS host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Install rsync
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync

      - name: Sync project to server via rsync
        run: |
          rsync -az --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='.env' \
            --exclude='README.md' \
            -e "ssh -p ${{ secrets.SSH_PORT }}" \
            ./project/  ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/


      - name: Build & (re)start services on VPS
        shell: bash
        run: |
          ssh -p "${{ secrets.SSH_PORT }}" -o StrictHostKeyChecking=yes \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            DEPLOY_PATH="${{ secrets.DEPLOY_PATH }}" 'bash -s' <<'EOSH'
          set -euo pipefail
          set -x

          cd "$DEPLOY_PATH"
          ls -la

          # Определяем compose-файл
          if [ -f docker-compose.yml ]; then
            CF=docker-compose.yml
          elif [ -f docker-compose.prod.yml ]; then
            CF=docker-compose.prod.yml
          else
            echo "No docker compose file found in $(pwd)"
            exit 1
          fi

          docker compose -f "$CF" pull || true
          docker compose -f "$CF" up -d --build
          docker system prune -f || true

